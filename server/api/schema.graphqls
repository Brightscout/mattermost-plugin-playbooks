type Query {
	playbook(id: String!): Playbook
}

type Mutation {
	updatePlaybook(id: String!, updates: PlaybookUpdates!): String!
	#addPlaybookMember(id: String!, newMember: NewMember): String
}

input PlaybookUpdates {
	title: String
	description: String
	public: Boolean
	createPublicPlaybookRun: Boolean
	invitedUserIDs: [String!]
	invitedGroupIDs: [String!]
	inviteUsersEnabled: Boolean
	defaultOwnerID: String
	defaultOwnerEnabled: Boolean
	broadcastChannelIDs: [String!]
	broadcastEnabled: Boolean
	webhookOnCreationURLs: [String!]
	webhookOnCreationEnabled: Boolean
	retrospectiveReminderIntervalSeconds: Float
	retrospectiveTemplate: String
	retrospectiveEnabled: Boolean
	webhookOnStatusUpdateURLs: [String!]
	webhookOnStatusUpdateEnabled: Boolean
	signalAnyKeywords: [String!]
	signalAnyKeywordsEnabled: Boolean
	categorizeChannelEnabled: Boolean
	categoryName: String
	runSummaryTemplateEnabled: Boolean
	runSummaryTemplate: String
	channelNameTemplate: String
}

input NewMember {
	userID: String!
	roles:  [String!]!
}

type Playbook {
	id: String!
	title: String!
	description: String!
	teamID: String!
	createPublicPlaybookRun: Boolean!
	deleteAt: Float!
	runSummaryTemplateEnabled: Boolean!
	defaultPlaybookMemberRole: String!
	public: Boolean!
	checklists: [Checklist!]!
	members: [Member!]!
	invitedUserIDs: [String!]!
	invitedGroupIDs: [String!]!
	defaultOwnerID: String!
	defaultOwnerEnabled: Boolean!
	broadcastChannelIDs: [String!]!
	broadcastEnabled: Boolean!
	webhookOnCreationURLs: [String!]!
	retrospectiveReminderIntervalSeconds: Float!
	retrospectiveTemplate: String!
	retrospectiveEnabled: Boolean!
	webhookOnStatusUpdateURLs: [String!]!
	webhookOnStatusUpdateEnabled: Boolean!
	signalAnyKeywords: [String!]!
	signalAnyKeywordsEnabled: Boolean!
	categorizeChannelEnabled: Boolean!
	categoryName: String!
	runSummaryTemplateEnabled: Boolean!
	runSummaryTemplate: String!
	channelNameTemplate: String!
	defaultPlaybookAdminRole: String!
	defaultPlaybookMemberRole: String!
	defaultRunAdminRole: String!
	defaultRunMemberRole: String!
	metrics: [PlaybookMetricConfig!]!
}

type Checklist {
	id: String!
	title: String!
	items: [ChecklistItem!]!
}

type Member {
	userID: String!
	roles: [String!]!
}

type ChecklistItem {
	id: String!
	title: String!
	description: String!
	state: String!
	#stateModified: Float!
	assigneeID: String!
	#assigneeModified: Float!
	command: String!
	#commandLastRun: Float!
}

type PlaybookMetricConfig {
	id: String!
	title: String!
	description: String!
	type: String!
	target: Int
}
